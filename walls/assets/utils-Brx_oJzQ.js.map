{"version":3,"file":"utils-Brx_oJzQ.js","sources":["../../src/utils/utils.js"],"sourcesContent":["// CONTADOR DE CANCIONES Y MINUTOS\n// src/utils/utils.js\nexport const contarCanciones = (playlists) => {\n    return playlists.reduce((total, playlist) => {\n        if (Array.isArray(playlist.playlistData)) {\n            return total + playlist.playlistData.length;\n        }\n        return total;\n    }, 0);\n};\n\nconst convertirTiempoASegundos = (timeString) => {\n    // Validación del formato de trackTime\n    if (!timeString || typeof timeString !== 'string' || !timeString.includes(':')) {\n        console.warn(`Formato incorrecto de trackTime: ${timeString}`);\n        return 0; // Devolver 0 si el formato es incorrecto\n    }\n\n    const [minutos, segundos] = timeString.split(':').map(Number);\n\n    // Asegurarse de que ambos valores sean números\n    if (isNaN(minutos) || isNaN(segundos)) {\n        console.warn(`trackTime contiene valores no numéricos: ${timeString}`);\n        return 0; // Devolver 0 si no son números válidos\n    }\n\n    return minutos * 60 + segundos;\n};\n\nexport const calcularDuracionTotal = (playlists) => {\n    const totalSegundos = playlists.reduce((total, playlist) => {\n        if (Array.isArray(playlist.playlistData)) {\n            return total + playlist.playlistData.reduce((subtotal, song) => {\n                return subtotal + convertirTiempoASegundos(song.trackTime);\n            }, 0);\n        }\n        return total;\n    }, 0);\n\n    const totalMinutos = Math.floor(totalSegundos / 60);\n\n    return `${totalMinutos} min`;\n};\n\nexport const calcularDuracionPlaylist = (playlistData) => {\n    const totalSegundos = playlistData.reduce((total, song) => {\n        return total + convertirTiempoASegundos(song.trackTime);\n    }, 0);\n\n    const totalMinutos = Math.floor(totalSegundos / 60);\n\n    return `${totalMinutos} min`;\n};\n\n\n\n\n\n\n/* export const contarCanciones = (playlists) => {\n    return playlists.reduce((total, playlist) => {\n        if (Array.isArray(playlist.playlistData)) {\n            return total + playlist.playlistData.length;\n        }\n        return total;\n    }, 0);\n};\n\nconst convertirTiempoASegundos = (timeString) => {\n    const [minutos, segundos] = timeString.split(':').map(Number);\n    return minutos * 60 + segundos;\n};\n\nexport const calcularDuracionTotal = (playlists) => {\n    const totalSegundos = playlists.reduce((total, playlist) => {\n        if (Array.isArray(playlist.playlistData)) {\n            return total + playlist.playlistData.reduce((subtotal, song) => {\n                return subtotal + convertirTiempoASegundos(song.trackTime);\n            }, 0);\n        }\n        return total;\n    }, 0);\n\n    const totalMinutos = Math.floor(totalSegundos / 60);\n\n    return `${totalMinutos} min`;\n};\n\nexport const calcularDuracionPlaylist = (playlistData) => {\n    const totalSegundos = playlistData.reduce((total, song) => {\n        return total + convertirTiempoASegundos(song.trackTime);\n    }, 0);\n\n    const totalMinutos = Math.floor(totalSegundos / 60);\n\n    return `${totalMinutos} min`;\n}; */"],"names":["contarCanciones","playlists","total","playlist","convertirTiempoASegundos","timeString","minutos","segundos","calcularDuracionTotal","totalSegundos","subtotal","song","calcularDuracionPlaylist","playlistData"],"mappings":"AAEY,MAACA,EAAmBC,GACrBA,EAAU,OAAO,CAACC,EAAOC,IACxB,MAAM,QAAQA,EAAS,YAAY,EAC5BD,EAAQC,EAAS,aAAa,OAElCD,EACR,CAAC,EAGFE,EAA4BC,GAAe,CAE7C,GAAI,CAACA,GAAc,OAAOA,GAAe,UAAY,CAACA,EAAW,SAAS,GAAG,EACzE,eAAQ,KAAK,oCAAoCA,CAAU,EAAE,EACtD,EAGX,KAAM,CAACC,EAASC,CAAQ,EAAIF,EAAW,MAAM,GAAG,EAAE,IAAI,MAAM,EAG5D,OAAI,MAAMC,CAAO,GAAK,MAAMC,CAAQ,GAChC,QAAQ,KAAK,4CAA4CF,CAAU,EAAE,EAC9D,GAGJC,EAAU,GAAKC,CAC1B,EAEaC,EAAyBP,GAAc,CAChD,MAAMQ,EAAgBR,EAAU,OAAO,CAACC,EAAOC,IACvC,MAAM,QAAQA,EAAS,YAAY,EAC5BD,EAAQC,EAAS,aAAa,OAAO,CAACO,EAAUC,IAC5CD,EAAWN,EAAyBO,EAAK,SAAS,EAC1D,CAAC,EAEDT,EACR,CAAC,EAIJ,MAAO,GAFc,KAAK,MAAMO,EAAgB,EAAE,CAE5B,MAC1B,EAEaG,EAA4BC,GAAiB,CACtD,MAAMJ,EAAgBI,EAAa,OAAO,CAACX,EAAOS,IACvCT,EAAQE,EAAyBO,EAAK,SAAS,EACvD,CAAC,EAIJ,MAAO,GAFc,KAAK,MAAMF,EAAgB,EAAE,CAE5B,MAC1B"}